#!/usr/bin/env zsh

case `uname` in
  Darwin)
    . $HOME/.zsh/darwin.sh
    ;;
  Linux)
    . $HOME/.zsh/linux.sh
    ;;
esac

if [[ -a $HOME/.zsh/local.sh ]]; then
    . $HOME/.zsh/local.sh
fi

# Disable Ctrl-S to suspend tasks.
# It makes it possible to forward search history instead.
stty -ixon

export LESS="QR"
export EDITOR="vim"
export MANPATH="/usr/local/man:/usr/local/mysql/man:/usr/local/git/man:$MANPATH"
export TERM="xterm-256color"

export TEXMFHOME="~/.texmf" # personal tex packages
export GEM_HOME="$HOME/.gems"
#export NPM_CONFIG_PREFIX="$HOME/.npm_bins"
export CHROME_BIN=`which chromium-browser` # used for running karma tests.

# PATH env var

PATHDIRS=(
    $HOME/.gems/bin
    $HOME/.bin
    $NPM_CONFIG_PREFIX/bin
    /usr/local/go/bin
    $HOME/softs/sbt/bin
    $HOME/softs/scala-2.10.2/bin
    $HOME/travail/arcanist/arcanist/bin
    $HOME/travail/password-vault/bin
)

for dir in $PATHDIRS
do
    if [ -d $dir ]; then
        export PATH=$dir:$PATH
    fi
done

# use bash-style C-w behaviour
autoload -U select-word-style
select-word-style bash

fpath=(~/.zsh/functions $fpath)

autoload -U ~/.zsh/functions/*(:t)

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
REPORTTIME=10 # print elapsed time when more than 10 seconds

setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt SHARE_HISTORY # share history between sessions ???
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD

setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
# setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

# use a decent prompt
autoload -U promptinit && promptinit
prompt suse

unamestr=`uname`
if [ "$unamestr" = 'Darwin' ]; then
    chpwd () {print -Pn "\e]2; %~/ \a"}
fi

bindkey -e # Emacs keybindings
#zle -N newtab
#bindkey '^[^[[D' backward-word
#bindkey '^[^[[C' forward-word
#bindkey '^[[5D' beginning-of-line
#bindkey '^[[5C' end-of-line
#bindkey '^[[3~' delete-char
#bindkey '^[^N' newtab
#bindkey '^?' backward-delete-char 

function act() {
    FILE=$(findact)
    if [ $? -eq 0 ]; then
        echo -n "Source $FILE (y/n) ? "
        read  yn
        case $yn in
        [Yy]* ) source $FILE;
        esac
    fi
}

function silent_act() {
    yes | act
}

function runs {
    source `findact` # activate virtualenv
    MNPY=$(findact manage.py)

    cd `dirname $MNPY`
    python $MNPY runserver
}
